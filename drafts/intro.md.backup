# _Intro_

Dear reader,

This book is a continuation of the first volume of 50 Math Puzzles - Solved using functional Julia.

Its purpose is the same, to share some amusement by showing how mathematical puzzles can be solved using Julia programming language.

If your intention is to [learn](https://juliaacademy.com/courses), or [deepen your learning](https://www.linuxlinks.com/excellent-free-books-learn-julia/) of Julia there are excellent free resources available. The same way, if you intend to [learn](https://schoolyourself.org/) or [deepen your learning](https://www.openculture.com/free-math-textbooks) of mathematics there are hundreds of free courses and books attainable.

For this second volume were chosen mainly medium difficulty (along with a couple of more difficult) puzzles, just to keep the reader interested, and there are some original problems. As for the first volume, the author resisted the temptation of ordering the problems by it's (theoretical) degree of difficulty trying to avoid the reader getting to some page where he gives up, as frequently happens. This time we suggest the reader to randomly choose puzzles from the index list, and hopefully this way finally goes through them all.

The versions of Julia used to write the code were 1.5.3, and 1.7.1.

[Carl Sagan](https://en.wikipedia.org/wiki/Carl_Sagan) states: "Mathematics might be prized or ignored, but it is equally true everywhere - independent of ethnicity, culture, language, religion, ideology."

"And there is really a practical utility in puzzle-solving. Regular exercise is supposed to be as necessary for the brain as for the body, and in both cases it is not so much what we do as the doing of it from which we derive benefit." writes [Henry Dudeney](https://en.wikipedia.org/wiki/Henry_Dudeney) on the Introduction of *The Canterbury Puzzles*.

On what concerns to the use of Julia programming language I make my own Emma Boudreau's words on [a 2021 post](https://towardsdatascience.com/the-depressing-challenges-facing-the-julia-programming-language-in-2021-34c748968ab7): "I really love Julia, in case you have not noticed yet. I love how much it has taught me, I love how it is unique and has its own awesome paradigm that I find to be incredibly expressive."

Did you know, for example, that in Julia it is possible to iterate using fractions or decimal numbers?

```
julia> for n in 1/2:1/2:3/2
           print(l," ")
       end
0.5 1.0 1.5

julia> for n in 1//2:1//2:3//2
           print(l," ")
       end
1//2 1//1 3//2 
```

Have much fun.

<p style="text-align:right;">Ace Alumni Ore</p>